# Generated by Django 5.0.2 on 2024-05-19 18:57

import django.db.models.deletion
import hindu.enums.geosite_enum
import hindu.models.event_category
import hindu.models.goshala_category
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "capital",
                    models.CharField(
                        blank=True, db_column="capital", max_length=45, null=True
                    ),
                ),
                (
                    "alternativename",
                    models.CharField(
                        blank=True,
                        db_column="alternativename",
                        max_length=45,
                        null=True,
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("COUNTRY", "COUNTRY")],
                        db_column="type",
                        default="COUNTRY",
                        max_length=30,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "country",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="District",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                ("shortname", models.CharField(db_column="shortname", max_length=45)),
                (
                    "headquarters",
                    models.CharField(
                        blank=True, db_column="headquarters", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                ("cityname", models.CharField(max_length=200)),
                ("created_at", models.CharField(max_length=200)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("DISTRICT", "DISTRICT"), ("CITY", "CITY")],
                        db_column="type",
                        default="DISTRICT",
                        max_length=30,
                    ),
                ),
            ],
            options={
                "db_table": "district",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=hindu.models.event_category.unique_id_gen_evnt_catg,
                        editable=False,
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("pic", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "Event_category",
            },
        ),
        migrations.CreateModel(
            name="EventCategory1",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid4,
                        editable=False,
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("pic", models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="GoshalaCategory",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=hindu.models.goshala_category.uniq_id_gen_goshlCatg,
                        editable=False,
                        max_length=200,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("pic", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "goshala_category",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Register",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("dob", models.DateField()),
                ("gotram", models.CharField(blank=True, max_length=200)),
                (
                    "verification_otp",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("verification_otp_created_time", models.DateTimeField(null=True)),
                ("verification_otp_resend_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("CREATED", "CREATED"),
                            ("ACTIVE", "ACTIVE"),
                            ("INACTIVE", "INACTIVE"),
                        ],
                        default="CREATED",
                        max_length=50,
                    ),
                ),
                ("username", models.CharField(db_column="username", max_length=200)),
                ("password", models.CharField(max_length=200)),
                (
                    "forgot_password_otp",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("forgot_password_otp_created_time", models.DateTimeField(null=True)),
                ("forgot_password_otp_resend_count", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "profile",
            },
        ),
        migrations.CreateModel(
            name="TempleCategory",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                (
                    "shortname",
                    models.CharField(
                        blank=True, db_column="shortname", max_length=32, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("pic", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "temple_category",
            },
        ),
        migrations.CreateModel(
            name="TemplePriority",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=45)),
                ("desc", models.TextField(blank=True, max_length=250, null=True)),
                ("shortname", models.CharField(blank=True, max_length=32, unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "temple_priority",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Block",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "municipality",
                    models.CharField(
                        blank=True, db_column="municipality", max_length=45, null=True
                    ),
                ),
                (
                    "population",
                    models.CharField(
                        blank=True, db_column="population", max_length=45, null=True
                    ),
                ),
                ("desc", models.CharField(db_column="desc", max_length=250)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("BLOCK", "BLOCK"), ("TOWN", "TOWN")],
                        db_column="type",
                        default="BLOCK",
                        max_length=30,
                    ),
                ),
                (
                    "district",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocks",
                        to="hindu.district",
                    ),
                ),
            ],
            options={
                "db_table": "block",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                ("start_date", models.DateField(db_column="start_date")),
                ("end_date", models.DateField(db_column="end_date")),
                (
                    "start_time",
                    models.TimeField(blank=True, db_column="start_time", null=True),
                ),
                (
                    "end_time",
                    models.TimeField(blank=True, db_column="end_time", null=True),
                ),
                (
                    "tag",
                    models.CharField(
                        blank=True,
                        choices=[("TEMPLE", "TEMPLE"), ("GOSHALA", "GOSHALA")],
                        db_column="tag",
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                ("tag_id", models.CharField(max_length=45, null=True)),
                (
                    "tag_type_id",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "geo_site",
                    models.CharField(
                        choices=[
                            ("MANDAL", "M"),
                            ("BLOCK", "B"),
                            ("VILLAGE", "V"),
                            ("DISTRICT", "D"),
                            ("STATE", "S"),
                            ("COUNTRY", "C"),
                        ],
                        default=hindu.enums.geosite_enum.GeoSite["VILLAGE"],
                        max_length=50,
                    ),
                ),
                ("content_type_id", models.IntegerField(blank=True, null=True)),
                (
                    "map_location",
                    models.CharField(
                        blank=True, db_column="map_location", max_length=45, null=True
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, db_column="contact_me", max_length=45, null=True
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, db_column="contact_phone", max_length=10, null=True
                    ),
                ),
                (
                    "contact_email",
                    models.CharField(
                        blank=True, db_column="contact_email", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("INACTIVE", "INACTIVE")],
                        db_column="status",
                        default="INACTIVE",
                        max_length=50,
                    ),
                ),
                (
                    "image_location",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        db_column="category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hindu.eventcategory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to="hindu.register",
                    ),
                ),
            ],
            options={
                "db_table": "event",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                ("shortname", models.CharField(db_column="shortname", max_length=45)),
                (
                    "capital",
                    models.CharField(
                        blank=True, db_column="capital", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("STATE", "STATE")],
                        db_column="type",
                        default="STATE",
                        max_length=30,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="states",
                        to="hindu.country",
                    ),
                ),
            ],
            options={
                "db_table": "state",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="district",
            name="state",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="districts",
                to="hindu.state",
            ),
        ),
        migrations.CreateModel(
            name="Temple",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=100)),
                (
                    "is_navagraha_established",
                    models.BooleanField(
                        blank=True,
                        db_column="is_navagraha_established",
                        default=False,
                        null=True,
                    ),
                ),
                (
                    "construction_year",
                    models.PositiveIntegerField(
                        blank=True, db_column="construction_year", null=True
                    ),
                ),
                (
                    "era",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("BEFORE_CHRIST", "BC"),
                            ("AFTER_DEATH", "AD"),
                            ("OTHER", ""),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_destroyed",
                    models.BooleanField(db_column="is_destroyed", default=False),
                ),
                (
                    "animal_sacrifice_status",
                    models.BooleanField(
                        db_column="animal_sacrifice_status", default=False
                    ),
                ),
                (
                    "diety",
                    models.CharField(
                        blank=True, db_column="diety", max_length=100, null=True
                    ),
                ),
                (
                    "style",
                    models.CharField(
                        choices=[
                            ("NAGARA", "N"),
                            ("DRAVIDA", "D"),
                            ("VESARA", "V"),
                            ("OTHER", ""),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                (
                    "geo_site",
                    models.CharField(
                        choices=[
                            ("MANDAL", "M"),
                            ("BLOCK", "B"),
                            ("VILLAGE", "V"),
                            ("DISTRICT", "D"),
                            ("STATE", "S"),
                            ("COUNTRY", "C"),
                        ],
                        default="V",
                        max_length=50,
                    ),
                ),
                (
                    "temple_map_location",
                    models.CharField(
                        blank=True,
                        db_column="temple_map_location",
                        max_length=45,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="address", max_length=500, null=True
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, db_column="contact_name", max_length=45, null=True
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, db_column="contact_phone", max_length=15, null=True
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, db_column="contact_email", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=1000, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("INACTIVE", "INACTIVE")],
                        db_column="status",
                        default="INACTIVE",
                        max_length=50,
                    ),
                ),
                ("image_location", models.TextField(blank=True, null=True)),
                (
                    "old_temple_code",
                    models.CharField(
                        db_column="old_temple_code", max_length=45, null=True
                    ),
                ),
                (
                    "can_connect",
                    models.BooleanField(
                        blank=True, db_column="can_connect", default=False
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temples",
                        to="hindu.register",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        db_column="category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temples",
                        to="hindu.templecategory",
                    ),
                ),
                (
                    "priority",
                    models.ForeignKey(
                        blank=True,
                        db_column="priority",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temples",
                        to="hindu.templepriority",
                    ),
                ),
            ],
            options={
                "db_table": "temple",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Goshala",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "reg_num",
                    models.CharField(
                        blank=True, db_column="reg_num", max_length=45, null=True
                    ),
                ),
                (
                    "geo_site",
                    models.CharField(
                        choices=[
                            ("MANDAL", "M"),
                            ("BLOCK", "B"),
                            ("VILLAGE", "V"),
                            ("DISTRICT", "D"),
                            ("STATE", "S"),
                            ("COUNTRY", "C"),
                        ],
                        default="V",
                        max_length=50,
                    ),
                ),
                (
                    "map_location",
                    models.CharField(
                        blank=True, db_column="map_location", max_length=45, null=True
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, db_column="contact_name", max_length=45, null=True
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, db_column="contact_phone", max_length=15, null=True
                    ),
                ),
                ("address", models.CharField(db_column="address", max_length=100)),
                (
                    "email",
                    models.CharField(
                        blank=True, db_column="email", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=250, null=True
                    ),
                ),
                (
                    "regn_document",
                    models.CharField(
                        blank=True, db_column="regn_document", max_length=45, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("INACTIVE", "INACTIVE")],
                        db_column="status",
                        default="INACTIVE",
                        max_length=50,
                    ),
                ),
                ("image_location", models.TextField(blank=True, null=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        db_column="category",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hindu.goshalacategory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="goshalas",
                        to="hindu.register",
                    ),
                ),
                (
                    "temple",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="goshala",
                        to="hindu.temple",
                    ),
                ),
            ],
            options={
                "db_table": "goshala",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="ConnectModel",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "connected_as",
                    models.CharField(
                        choices=[("MEMBER", "MEMBER"), ("PUJARI", "PUJARI")],
                        default="MEMBER",
                        max_length=30,
                    ),
                ),
                ("belongs_as", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_column="user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ConnectModel",
                        to="hindu.register",
                    ),
                ),
                (
                    "temple",
                    models.ForeignKey(
                        blank=True,
                        db_column="temple",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ConnectModel",
                        to="hindu.temple",
                    ),
                ),
            ],
            options={
                "db_table": "connect",
            },
        ),
        migrations.CreateModel(
            name="CommentModel",
            fields=[
                (
                    "_id",
                    models.UUIDField(
                        db_column="_id",
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("body", models.CharField(db_column="body", max_length=250)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        db_column="event",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="hindu.event",
                    ),
                ),
                (
                    "goshala",
                    models.ForeignKey(
                        blank=True,
                        db_column="goshala",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="hindu.goshala",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_column="user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="hindu.register",
                    ),
                ),
                (
                    "temple",
                    models.ForeignKey(
                        blank=True,
                        db_column="temple",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="hindu.temple",
                    ),
                ),
            ],
            options={
                "db_table": "comment",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FamousTemple",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=100)),
                (
                    "is_navagraha_established",
                    models.BooleanField(
                        blank=True,
                        db_column="is_navagraha_established",
                        default=False,
                        null=True,
                    ),
                ),
                (
                    "construction_year",
                    models.CharField(
                        blank=True,
                        db_column="construction_year",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "era",
                    models.CharField(
                        choices=[
                            ("BEFORE_CHRIST", "BC"),
                            ("AFTER_DEATH", "AD"),
                            ("OTHER", ""),
                        ],
                        default=None,
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "is_destroyed",
                    models.BooleanField(db_column="is_destroyed", default=False),
                ),
                (
                    "animal_sacrifice_status",
                    models.BooleanField(
                        db_column="animal_sacrifice_status", default=False
                    ),
                ),
                (
                    "diety",
                    models.CharField(
                        blank=True, db_column="diety", max_length=100, null=True
                    ),
                ),
                (
                    "style",
                    models.CharField(
                        choices=[
                            ("NAGARA", "N"),
                            ("DRAVIDA", "D"),
                            ("VESARA", "V"),
                            ("OTHER", ""),
                        ],
                        default="",
                        max_length=50,
                    ),
                ),
                (
                    "geo_site",
                    models.CharField(
                        choices=[
                            ("MANDAL", "M"),
                            ("BLOCK", "B"),
                            ("VILLAGE", "V"),
                            ("DISTRICT", "D"),
                            ("STATE", "S"),
                            ("COUNTRY", "C"),
                        ],
                        default="V",
                        max_length=50,
                    ),
                ),
                ("object_id", models.CharField(max_length=45, null=True)),
                (
                    "temple_map_location",
                    models.CharField(
                        blank=True,
                        db_column="temple_map_location",
                        max_length=45,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, db_column="address", max_length=500, null=True
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True, db_column="contact_name", max_length=45, null=True
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True, db_column="contact_phone", max_length=15, null=True
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True, db_column="contact_email", max_length=45, null=True
                    ),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, db_column="desc", max_length=1000, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("INACTIVE", "INACTIVE")],
                        db_column="status",
                        default="INACTIVE",
                        max_length=50,
                    ),
                ),
                (
                    "image_location",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "can_connect",
                    models.BooleanField(
                        blank=True, db_column="can_connect", default=False
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="famous_temples",
                        to="hindu.register",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        db_column="category",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="famous_temples",
                        to="hindu.templecategory",
                    ),
                ),
                (
                    "priority",
                    models.ForeignKey(
                        blank=True,
                        db_column="priority",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="hindu.templepriority",
                    ),
                ),
            ],
            options={
                "db_table": "famous _temples",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Village",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(db_column="name", max_length=45)),
                (
                    "desc",
                    models.CharField(
                        blank=True,
                        db_column="desc",
                        default=None,
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "mapUrl",
                    models.URLField(
                        blank=True, db_column="map_url", max_length=255, null=True
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "ACTIVE"), ("INACTIVE", "INACTIVE")],
                        db_column="status",
                        default="INACTIVE",
                        max_length=50,
                    ),
                ),
                ("pin_code", models.CharField(db_column="pin_code", max_length=15)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "image_location",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("VILLAGE", "VILLAGE"), ("AREA", "AREA")],
                        db_column="type",
                        default="VILLAGE",
                        max_length=30,
                    ),
                ),
                (
                    "old_village_code",
                    models.CharField(
                        db_column="old_village_code", max_length=45, null=True
                    ),
                ),
                (
                    "block",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="villages",
                        to="hindu.block",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="villages",
                        to="hindu.register",
                    ),
                ),
            ],
            options={
                "db_table": "village",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="temple",
            name="object_id",
            field=models.ForeignKey(
                blank=True,
                db_column="object_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="temples",
                to="hindu.village",
            ),
        ),
        migrations.CreateModel(
            name="MemberModel",
            fields=[
                (
                    "_id",
                    models.CharField(
                        db_column="_id",
                        default=uuid.uuid1,
                        editable=False,
                        max_length=45,
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("surname", models.CharField(max_length=200)),
                ("father_name", models.CharField(max_length=200)),
                ("you_belongs_to_the_village", models.CharField(max_length=200)),
                (
                    "your_role_in_our_village",
                    models.CharField(
                        choices=[("Villager", "Villager"), ("sarpanch", "sarpanch")],
                        default="Villager",
                        max_length=200,
                    ),
                ),
                ("contact_number", models.CharField(max_length=100)),
                (
                    "connect",
                    models.ForeignKey(
                        blank=True,
                        db_column="connect",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Member",
                        to="hindu.connectmodel",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_column="user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Member",
                        to="hindu.register",
                    ),
                ),
                (
                    "village",
                    models.ForeignKey(
                        blank=True,
                        db_column="village",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Member",
                        to="hindu.village",
                    ),
                ),
            ],
            options={
                "db_table": "Member",
            },
        ),
        migrations.AddField(
            model_name="goshala",
            name="object_id",
            field=models.ForeignKey(
                blank=True,
                db_column="object_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="goshalas",
                to="hindu.village",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="object_id",
            field=models.ForeignKey(
                blank=True,
                db_column="object_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="hindu.village",
            ),
        ),
        migrations.AddField(
            model_name="connectmodel",
            name="village",
            field=models.ForeignKey(
                blank=True,
                db_column="village",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ConnectModel",
                to="hindu.village",
            ),
        ),
    ]
